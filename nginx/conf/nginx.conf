# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
    ~font/                     max;
}

server {
    listen  80;
    listen  [::]:80;
    server_name helpdesk.hs-heilbronn.de helpdesk.rz.hs-heilbronn.de;
    server_tokens off;

    location / {
         return 301 https://helpdesk.hs-heilbronn.de$request_uri;
    }
}

server {
    listen  443 ssl http2;
    listen  [::]:443 ssl http2;
    server_name helpdesk.hs-heilbronn.de helpdesk.rz.hs-heilbronn.de;
    server_tokens off;

    # security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header Content-Security-Policy "frame-src 'self'; frame-ancestors 'self'; object-src 'none';";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    #caching
    expires $expires;

    ssl_certificate /etc/nginx/ssl/fqdn.cert;
    ssl_certificate_key /etc/nginx/ssl/fqdn.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    ssl_dhparam /etc/nginx/ssl/dhparams.pem;

    # intermediate configuration from https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1d&ocsp=false&guideline=5.6
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location /admin {
        proxy_set_header "X-Forwarded-For" $proxy_add_x_forwarded_for; # To forward the original client's IP address 
        proxy_set_header "X-Forwarded-Proto" $scheme; # to forward the  original protocol (HTTP or HTTPS)
	    proxy_set_header "X-Forwarded-Port" "443";
        proxy_set_header Host $host; # to forward the original host requested by the client

	    proxy_pass http://localhost:8080;
    }

    location /oauth2 {
        proxy_set_header "X-Forwarded-For" $proxy_add_x_forwarded_for; # To forward the original client's IP address
        proxy_set_header "X-Forwarded-Proto" $scheme; # to forward the  original protocol (HTTP or HTTPS
	    proxy_set_header "X-Forwarded-Port" "443";
        proxy_set_header Host $host; # to forward the original host requested by the client

        proxy_pass http://localhost:8080;
    }

    location /login {
        proxy_set_header "X-Forwarded-For" $proxy_add_x_forwarded_for; # To forward the original client's IP address
        proxy_set_header "X-Forwarded-Proto" $scheme; # to forward the  original protocol (HTTP or HTTPS
	    proxy_set_header "X-Forwarded-Port" "443";
        proxy_set_header Host $host; # to forward the original host requested by the client

        proxy_pass http://localhost:8080;
    }
}
